{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.14.0.0",
        "fileVersion": "4.14.0-3.25262.10 (8edf7bcd)",
        "semanticVersion": "4.14.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "NUnit2003",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.True), instead of the classic model, Assert.IsTrue(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Jenkins/PipelineDemo/PipelineNUnit/PipelineNUnit.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 13,
                  "endLine": 20,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsTrue"
            }
          }
        },
        {
          "ruleId": "NUnit2002",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.False), instead of the classic model, Assert.IsFalse(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Jenkins/PipelineDemo/PipelineNUnit/PipelineNUnit.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 13,
                  "endLine": 33,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsFalse"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Jenkins/PipelineDemo/PipelineNUnit/PipelineNUnit.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 13,
                  "endLine": 21,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        }
      ],
      "rules": {
        "NUnit2002": {
          "id": "NUnit2002",
          "shortDescription": "Consider using Assert.That(expr, Is.False) instead of Assert.IsFalse(expr)",
          "fullDescription": "Consider using the constraint model, Assert.That(expr, Is.False), instead of the classic model, Assert.IsFalse(expr).",
          "defaultLevel": "note",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2002.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        },
        "NUnit2003": {
          "id": "NUnit2003",
          "shortDescription": "Consider using Assert.That(expr, Is.True) instead of Assert.IsTrue(expr)",
          "fullDescription": "Consider using the constraint model, Assert.That(expr, Is.True), instead of the classic model, Assert.IsTrue(expr).",
          "defaultLevel": "note",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2003.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        },
        "NUnit2005": {
          "id": "NUnit2005",
          "shortDescription": "Consider using Assert.That(actual, Is.EqualTo(expected)) instead of Assert.AreEqual(expected, actual)",
          "fullDescription": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual).",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2005.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        }
      }
    }
  ]
}